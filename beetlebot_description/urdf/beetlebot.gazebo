<?xml version="1.0"?>
<robot>
    <gazebo reference="footprint_to_base">
            <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>

    <gazebo reference="base_link_to_camera">
            <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>

    <gazebo reference="base_link_to_front_caster">
            <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>
    <gazebo reference="base_link_to_top_base">
            <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>
    <gazebo reference="base_link_to_rear_caster">
            <preserveFixedJoint>true</preserveFixedJoint> 
    </gazebo>
    <gazebo reference="base_link_to_wheel_left">
            <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>
    <gazebo reference="base_link_to_left_bar">
            <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>

    <gazebo reference="base_link_to_right_bar">
            <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>

    <gazebo reference="base_link_to_rear_bar">
            <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>

    <gazebo reference="base_link_to_lidar">
            <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>
    <gazebo reference="base_link_to_imu">
            <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>
    <gazebo reference="base_link_to_camera">
            <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>
    
    <!-- Laser Scanner Plugin -->
    <gazebo>
        <plugin
            filename="gz-sim-sensors-system"
            name="gz::sim::systems::Sensors">
            <render_engine>ogre2</render_engine>
        </plugin>
    </gazebo>
    <gazebo reference="lidar">
        <sensor name='rp_lidar' type='gpu_lidar'>"
            <pose relative_to='lidar'>0 0 0 0 0 0</pose>
            <always_on>1</always_on>
            <visualize>true</visualize>
            <topic>lidar</topic>
            <gz_frame_id>lidar</gz_frame_id>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>640</samples>
                        <resolution>1</resolution>
                        <min_angle>-6.28319</min_angle>
                        <max_angle>6.28319</max_angle>
                    </horizontal>
                    <vertical>
                        <samples>1</samples>
                        <resolution>0.01</resolution>
                        <min_angle>0</min_angle>
                        <max_angle>0</max_angle>
                    </vertical>
                </scan>
                <range>
                    <min>0.08</min>
                    <max>10.0</max>
                    <resolution>0.01</resolution>
                </range>
            </ray>
        </sensor>
    </gazebo>

    <gazebo reference="camera">
        <sensor name="camera" type="camera">
            <always_on>true</always_on>
            <visualize>true</visualize>
            <update_rate>30</update_rate>
            <topic>camera/image_raw</topic>
            <gz_frame_id>camera</gz_frame_id>
            <camera name="intel_realsense_r200">
            <camera_info_topic>camera/camera_info</camera_info_topic>
            <horizontal_fov>1.02974</horizontal_fov>
            <image>
                <width>1920</width>
                <height>1080</height>
                <format>R8G8B8</format>
            </image>
            <clip>
                <near>0.02</near>
                <far>300</far>
            </clip>
            <noise>
                <type>gaussian</type>
                <!-- Noise is sampled independently per pixel on each frame.
                    That pixel's noise value is added to each of its color
                    channels, which at that point lie in the range [0,1]. -->
                <mean>0.0</mean>
                <stddev>0.007</stddev>
            </noise>
            </camera>
        </sensor>
    </gazebo>


    <gazebo>         
        <plugin filename="gz-sim-imu-system"
            name="gz::sim::systems::Imu">
        </plugin>
    </gazebo> 

    <gazebo reference="imu">
        <sensor name="imu_sensor" type="imu">
            <always_on>1</always_on>
            <update_rate>20</update_rate>
            <visualize>true</visualize>
            <topic>imu</topic>
        </sensor>
    </gazebo>

    <gazebo>  

        <plugin
            filename="gz-sim-joint-position-controller-system"
            name="gz::sim::systems::JointPositionController">
            <joint_name>base_link_to_camera</joint_name>
            <topic>camera_angle</topic>
            <p_gain>0.07</p_gain>
            <i_gain>0.001</i_gain>
            <d_gain>0.2</d_gain>
            <i_max>1</i_max>
            <i_min>-1</i_min>
            <cmd_max>1</cmd_max>
            <cmd_min>-1</cmd_min>
        </plugin>


        <!-- add DiffDrive plugin to control the robot
        ref: https://gazebosim.org/api/sim/8/classgz_1_1sim_1_1systems_1_1DiffDrive.html -->


        <plugin filename="gz-sim-diff-drive-system"
                name="gz::sim::systems::DiffDrive">
                <left_joint>base_link_to_wheel_left</left_joint>
                <right_joint>base_link_to_wheel_right</right_joint>
                <wheel_separation>0.6</wheel_separation>
                <wheel_radius>0.15</wheel_radius>
                <odom_publish_frequency>100</odom_publish_frequency>
                <max_linear_acceleration>1</max_linear_acceleration>
                <min_linear_acceleration>-1</min_linear_acceleration>
                <max_angular_acceleration>2</max_angular_acceleration>
                <min_angular_acceleration>-2</min_angular_acceleration>
                <max_linear_velocity>1</max_linear_velocity>
                <min_linear_velocity>-1</min_linear_velocity>
                <max_angular_velocity>4</max_angular_velocity>
                <min_angular_velocity>-4</min_angular_velocity>
                <topic>cmd_vel</topic>
                <publish_wheel_tf>false</publish_wheel_tf>
                
                <!-- <odom_topic>odom</odom_topic> -->
                <!-- <frame_id>beetlebot/odom</frame_id> -->
                <!-- <tf_topic>/tf</tf_topic> -->
                <!-- <odom_topic>odom</odom_topic> -->
                <!-- <frame_id>odom</frame_id>  -->
                <!-- <child_frame_id>beetlebot</child_frame_id>  -->
        </plugin>

        
        <!--  add OdometryPublisher plugin to publish odometry instedad of diff-drive plugin 
        ref: https://gazebosim.org/api/sim/8/classgz_1_1sim_1_1systems_1_1OdometryPublisher.html -->


        <plugin filename="gz-sim-odometry-publisher-system"
            name="gz::sim::systems::OdometryPublisher">
            <odom_topic>odom</odom_topic>
            <odom_covariance_topic>odom_covariance</odom_covariance_topic>
            <xyz_offset>0 0 0</xyz_offset>
            <odom_frame>beetlebot/odom</odom_frame>
            <robot_base_frame>beetlebot</robot_base_frame>
        </plugin>



        <!-- add PosePublisher plugin to publish pose of the robot
        ref: https://gazebosim.org/api/sim/8/classgz_1_1sim_1_1systems_1_1PosePublisher.html -->

        <plugin filename="gz-sim-pose-publisher-system"
            name="gz::sim::systems::PosePublisher">
            <publish_link_pose>true</publish_link_pose>
            <use_pose_vector_msg>true</use_pose_vector_msg>
            <static_publisher>true</static_publisher>
            <static_update_frequency>1</static_update_frequency>
        </plugin>
    
    
        <!-- add JointStatePublisher plugin to publish joint states of the robot
        ref: https://gazebosim.org/api/sim/8/classgz_1_1sim_1_1systems_1_1JointStatePublisher.html -->

        <plugin filename="gz-sim-joint-state-publisher-system"
            name="gz::sim::systems::JointStatePublisher">
            <topic>joint_states</topic>
            <update_rate>30</update_rate>
            <joint_name>base_link_to_wheel_left</joint_name>
            <joint_name>base_link_to_wheel_right</joint_name>

        </plugin>

    </gazebo> 

    
</robot>